{"ast":null,"code":"var _jsxFileName = \"/Users/shruthireddy/shruthi-reddy-brainflix/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './styles/App.css';\nimport Header from './components/Header';\nimport Row from './components/Row';\nimport Upload from './components/Upload';\nimport Video from './components/Video';\nimport Title from './components/Title';\nimport Description from './components/Description';\nimport Comments from './components/Comments';\nimport NextVideos from './components/NextVideos';\nimport videodata from './assets/Data/videos.json';\nimport videodatadet from './assets/Data/video-details.json';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconsole.log(videodata);\nconsole.log(videodatadet);\nfunction App() {\n  _s();\n  const nv = videodatadet.map(nxtvid => {\n    return {\n      id: nxtvid.id,\n      img: nxtvid.image,\n      title: nxtvid.title,\n      uploader: nxtvid.channel\n    };\n  });\n  const [activeVideo, setActiveVideo] = useState(videodatadet[0]);\n  const [nextVideos, setNextVideos] = useState(nv); //array of information next video requires; id,img url, title, uploader (full-currently active)\n\n  const handleClickVideo = video => {\n    //1.find full object based on video.id and set in setActiveVideo with this full object\n    const new_activevideo = videodatadet.filter(function (obj) {\n      return obj.id === video.id;\n    });\n    setActiveVideo(new_activevideo);\n\n    //2.reconstruct nextvideos array of objects\n    const new_nextvideos = videodatadet.filter(function (obj) {\n      return obj.id !== video.id;\n    });\n\n    //3. set nextvideos with a new value in step 2\n    setNextVideos(new_nextvideos);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Row, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Video, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Title, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Description, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Comments, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NextVideos, {\n      handleClickVideo: handleClickVideo,\n      videos: nextVideos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"tcCyJS2eHQ0AgHzfMEjGJvTiBUU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","Header","Row","Upload","Video","Title","Description","Comments","NextVideos","videodata","videodatadet","useState","console","log","App","nv","map","nxtvid","id","img","image","title","uploader","channel","activeVideo","setActiveVideo","nextVideos","setNextVideos","handleClickVideo","video","new_activevideo","filter","obj","new_nextvideos"],"sources":["/Users/shruthireddy/shruthi-reddy-brainflix/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './styles/App.css';\nimport Header from './components/Header';\nimport Row from './components/Row';\nimport Upload from './components/Upload';\nimport Video from './components/Video';\nimport Title from './components/Title';\nimport Description from './components/Description';\nimport Comments from './components/Comments';\nimport NextVideos from './components/NextVideos';\nimport videodata from './assets/Data/videos.json';\nimport videodatadet from './assets/Data/video-details.json';\nimport {useState} from 'react';\n\nconsole.log(videodata);\nconsole.log(videodatadet);\n\nfunction App() {\n  const nv = videodatadet.map((nxtvid)=>{\n   return {id:nxtvid.id,img:nxtvid.image,title:nxtvid.title,uploader:nxtvid.channel}\n  })\n \n  const [activeVideo,setActiveVideo]=useState(videodatadet[0]);\n  \n  const [nextVideos,setNextVideos]=useState(nv);//array of information next video requires; id,img url, title, uploader (full-currently active)\n \n  const handleClickVideo= (video)=>{\n    //1.find full object based on video.id and set in setActiveVideo with this full object\n        const new_activevideo = videodatadet.filter(function( obj ) {\n              return obj.id===video.id\n        });\n        setActiveVideo(new_activevideo)\n\n    //2.reconstruct nextvideos array of objects\n        const new_nextvideos = videodatadet.filter(function( obj ) {\n          return obj.id!==video.id\n        });\n  \n    //3. set nextvideos with a new value in step 2\n        setNextVideos(new_nextvideos)\n  }\n  \n  \n  return (\n    <>\n      <Header />\n      <Row />\n      <Upload />\n      <Video />\n      <Title />\n      <Description />\n      <Comments />\n      <NextVideos handleClickVideo={handleClickVideo} videos={nextVideos}/>\n    </>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,kBAAkB;AACzB,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,GAAG,MAAM,kBAAkB;AAClC,OAAOC,MAAM,MAAM,qBAAqB;AACxC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,WAAW,MAAM,0BAA0B;AAClD,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,UAAU,MAAM,yBAAyB;AAChD,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAOC,YAAY,MAAM,kCAAkC;AAC3D,SAAQC,QAAQ,QAAO,OAAO;AAAC;AAAA;AAE/BC,OAAO,CAACC,GAAG,CAACJ,SAAS,CAAC;AACtBG,OAAO,CAACC,GAAG,CAACH,YAAY,CAAC;AAEzB,SAASI,GAAG,GAAG;EAAA;EACb,MAAMC,EAAE,GAAGL,YAAY,CAACM,GAAG,CAAEC,MAAM,IAAG;IACrC,OAAO;MAACC,EAAE,EAACD,MAAM,CAACC,EAAE;MAACC,GAAG,EAACF,MAAM,CAACG,KAAK;MAACC,KAAK,EAACJ,MAAM,CAACI,KAAK;MAACC,QAAQ,EAACL,MAAM,CAACM;IAAO,CAAC;EAClF,CAAC,CAAC;EAEF,MAAM,CAACC,WAAW,EAACC,cAAc,CAAC,GAACd,QAAQ,CAACD,YAAY,CAAC,CAAC,CAAC,CAAC;EAE5D,MAAM,CAACgB,UAAU,EAACC,aAAa,CAAC,GAAChB,QAAQ,CAACI,EAAE,CAAC,CAAC;;EAE9C,MAAMa,gBAAgB,GAAGC,KAAK,IAAG;IAC/B;IACI,MAAMC,eAAe,GAAGpB,YAAY,CAACqB,MAAM,CAAC,UAAUC,GAAG,EAAG;MACtD,OAAOA,GAAG,CAACd,EAAE,KAAGW,KAAK,CAACX,EAAE;IAC9B,CAAC,CAAC;IACFO,cAAc,CAACK,eAAe,CAAC;;IAEnC;IACI,MAAMG,cAAc,GAAGvB,YAAY,CAACqB,MAAM,CAAC,UAAUC,GAAG,EAAG;MACzD,OAAOA,GAAG,CAACd,EAAE,KAAGW,KAAK,CAACX,EAAE;IAC1B,CAAC,CAAC;;IAEN;IACIS,aAAa,CAACM,cAAc,CAAC;EACnC,CAAC;EAGD,oBACE;IAAA,wBACE,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,GAAG;MAAA;MAAA;MAAA;IAAA,QAAG,eACP,QAAC,MAAM;MAAA;MAAA;MAAA;IAAA,QAAG,eACV,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACT,QAAC,KAAK;MAAA;MAAA;MAAA;IAAA,QAAG,eACT,QAAC,WAAW;MAAA;MAAA;MAAA;IAAA,QAAG,eACf,QAAC,QAAQ;MAAA;MAAA;MAAA;IAAA,QAAG,eACZ,QAAC,UAAU;MAAC,gBAAgB,EAAEL,gBAAiB;MAAC,MAAM,EAAEF;IAAW;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA,gBACpE;AAEP;AAAC,GAtCQZ,GAAG;AAAA,KAAHA,GAAG;AAwCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}